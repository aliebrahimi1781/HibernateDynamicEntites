17:20:26,097 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@280cb229
17:20:26,098 DEBUG BasicTypeRegistry:147 - Adding type registration class -> org.hibernate.type.ClassType@50d81341
17:20:26,098 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50d81341
17:20:26,101 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:20:26,101 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:20:26,102 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a4640
17:20:26,103 DEBUG BasicTypeRegistry:147 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15720bea
17:20:26,104 DEBUG BasicTypeRegistry:147 - Adding type registration binary -> org.hibernate.type.BinaryType@e658001
17:20:26,104 DEBUG BasicTypeRegistry:147 - Adding type registration byte[] -> org.hibernate.type.BinaryType@e658001
17:20:26,105 DEBUG BasicTypeRegistry:147 - Adding type registration [B -> org.hibernate.type.BinaryType@e658001
17:20:26,106 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54b5c292
17:20:26,106 DEBUG BasicTypeRegistry:147 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54b5c292
17:20:26,106 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54b5c292
17:20:26,107 DEBUG BasicTypeRegistry:147 - Adding type registration image -> org.hibernate.type.ImageType@27abf66
17:20:26,108 DEBUG BasicTypeRegistry:147 - Adding type registration characters -> org.hibernate.type.CharArrayType@3431b5d7
17:20:26,108 DEBUG BasicTypeRegistry:147 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3431b5d7
17:20:26,109 DEBUG BasicTypeRegistry:147 - Adding type registration [C -> org.hibernate.type.CharArrayType@3431b5d7
17:20:26,110 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@241dbc8b
17:20:26,110 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@241dbc8b
17:20:26,110 DEBUG BasicTypeRegistry:147 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@241dbc8b
17:20:26,111 DEBUG BasicTypeRegistry:147 - Adding type registration text -> org.hibernate.type.TextType@76663cdf
17:20:26,118 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@3485923b
17:20:26,119 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3485923b
17:20:26,119 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1319e2db
17:20:26,120 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@354742ee
17:20:26,125 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@48a85972
17:20:26,125 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48a85972
17:20:26,126 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27ae011
17:20:26,126 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6eaee86f
17:20:26,127 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@782516dc
17:20:26,128 DEBUG BasicTypeRegistry:147 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ed9c28
17:20:26,132 DEBUG BasicTypeRegistry:147 - Adding type registration object -> org.hibernate.type.ObjectType@1d505b41
17:20:26,132 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d505b41
17:20:26,132 DEBUG BasicTypeRegistry:147 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75657fb2
17:20:26,133 DEBUG BasicTypeRegistry:147 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5aa2bb54
17:20:26,133 DEBUG BasicTypeRegistry:147 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@71b8b648
17:20:26,133 DEBUG BasicTypeRegistry:147 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15c76b4c
17:20:26,133 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@575555bf
17:20:26,133 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@23709b64
17:20:26,133 DEBUG BasicTypeRegistry:147 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@35e9d469
17:20:26,134 DEBUG BasicTypeRegistry:147 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a785526
17:20:26,153  INFO Version:37 - Hibernate Commons Annotations 3.2.0.Final
17:20:26,158  INFO Environment:603 - Hibernate 3.6.6.Final
17:20:26,159  INFO Environment:636 - hibernate.properties not found
17:20:26,162  INFO Environment:814 - Bytecode provider name : javassist
17:20:26,165  INFO Environment:695 - using JDK 1.4 java.sql.Timestamp handling
17:20:26,216  INFO Configuration:2156 - configuring from resource: /hibernate.cfg.xml
17:20:26,217  INFO Configuration:2175 - Configuration resource: /hibernate.cfg.xml
17:20:26,291  WARN Environment:592 - Property [hibernate.cglib.use_reflection_optimizer] has been renamed to [hibernate.bytecode.use_reflection_optimizer]; update your properties appropriately
17:20:26,291  INFO Configuration:2297 - Configured SessionFactory: null
17:20:26,309  INFO Dialect:135 - Using dialect: org.hibernate.dialect.H2Dialect
17:20:26,354  INFO Configuration:1676 - Hibernate Validator not found: ignoring
17:20:26,358  INFO HibernateSearchEventListenerRegister:75 - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
17:20:26,359  WARN Environment:592 - Property [hibernate.cglib.use_reflection_optimizer] has been renamed to [hibernate.bytecode.use_reflection_optimizer]; update your properties appropriately
17:20:26,363  WARN ConnectionProviderFactory:152 - c3p0 properties is specificed, but could not find org.hibernate.connection.C3P0ConnectionProvider from the classpath, these properties are going to be ignored.
17:20:26,364  INFO DriverManagerConnectionProvider:64 - Using Hibernate built-in connection pool (not for production use!)
17:20:26,364  INFO DriverManagerConnectionProvider:65 - Hibernate connection pool size: 20
17:20:26,364  INFO DriverManagerConnectionProvider:68 - autocommit mode: false
17:20:26,367  INFO DriverManagerConnectionProvider:103 - using driver: org.h2.Driver at URL: jdbc:h2:~/motechtest
17:20:26,367  INFO DriverManagerConnectionProvider:109 - connection properties: {user=sa, password=****}
17:20:28,435  WARN SettingsFactory:147 - Could not obtain connection to query metadata
org.h2.jdbc.JdbcSQLException: Database may be already in use: "Locked by another process". Possible solutions: close all other connection(s); use the server mode [90020-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.store.FileLock.getExceptionAlreadyInUse(FileLock.java:441)
	at org.h2.store.FileLock.lockFile(FileLock.java:337)
	at org.h2.store.FileLock.lock(FileLock.java:129)
	at org.h2.engine.Database.open(Database.java:557)
	at org.h2.engine.Database.openDatabase(Database.java:224)
	at org.h2.engine.Database.<init>(Database.java:219)
	at org.h2.engine.Engine.openSession(Engine.java:56)
	at org.h2.engine.Engine.openSession(Engine.java:160)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:139)
	at org.h2.engine.Engine.createSession(Engine.java:122)
	at org.h2.engine.Engine.createSession(Engine.java:28)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:313)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:105)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:90)
	at org.h2.Driver.connect(Driver.java:73)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:133)
	at org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:113)
	at org.hibernate.cfg.Configuration.buildSettingsInternal(Configuration.java:2863)
	at org.hibernate.cfg.Configuration.buildSettings(Configuration.java:2859)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1870)
	at com.motech.test.customEntity.CustomEntityCreator.getSessionFactory2(CustomEntityCreator.java:138)
	at com.motech.test.customEntity.TestCustomEntity.main(TestCustomEntity.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
17:20:28,450  INFO Dialect:135 - Using dialect: org.hibernate.dialect.H2Dialect
17:20:28,453  INFO JdbcSupportLoader:70 - Disabling contextual LOB creation as connection was null
17:20:28,454  INFO TransactionFactoryFactory:62 - Using default transaction strategy (direct JDBC transactions)
17:20:28,456  INFO TransactionManagerLookupFactory:83 - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
17:20:28,456  INFO SettingsFactory:179 - Automatic flush during beforeCompletion(): disabled
17:20:28,456  INFO SettingsFactory:183 - Automatic session close at end of transaction: disabled
17:20:28,457  INFO SettingsFactory:198 - Scrollable result sets: disabled
17:20:28,457  INFO SettingsFactory:206 - JDBC3 getGeneratedKeys(): disabled
17:20:28,457  INFO SettingsFactory:214 - Connection release mode: auto
17:20:28,458  INFO SettingsFactory:241 - Default batch fetch size: 1
17:20:28,458  INFO SettingsFactory:245 - Generate SQL with comments: disabled
17:20:28,458  INFO SettingsFactory:249 - Order SQL updates by primary key: disabled
17:20:28,458  INFO SettingsFactory:253 - Order SQL inserts for batching: disabled
17:20:28,458  INFO SettingsFactory:431 - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
17:20:28,460  INFO ASTQueryTranslatorFactory:47 - Using ASTQueryTranslatorFactory
17:20:28,460  INFO SettingsFactory:261 - Query language substitutions: {}
17:20:28,460  INFO SettingsFactory:266 - JPA-QL strict compliance: disabled
17:20:28,460  INFO SettingsFactory:271 - Second-level cache: enabled
17:20:28,460  INFO SettingsFactory:275 - Query cache: disabled
17:20:28,461  INFO SettingsFactory:406 - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
17:20:28,461  INFO SettingsFactory:285 - Optimize cache for minimal puts: disabled
17:20:28,462  INFO SettingsFactory:294 - Structured second-level cache entries: disabled
17:20:28,465  INFO SettingsFactory:314 - Echoing all SQL to stdout
17:20:28,466  INFO SettingsFactory:323 - Statistics: disabled
17:20:28,466  INFO SettingsFactory:327 - Deleted entity synthetic identifier rollback: disabled
17:20:28,466  INFO SettingsFactory:343 - Default entity-mode: pojo
17:20:28,466  INFO SettingsFactory:347 - Named query checking : enabled
17:20:28,466  INFO SettingsFactory:351 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:20:28,484  INFO SessionFactoryImpl:202 - building session factory
17:20:28,489 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@5f9bc5bd
17:20:28,489 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:20:28,489 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7debbfde
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42e1b6ac
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3e470524
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@4cc3507d
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@4cc3507d
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4cc3507d
17:20:28,490 DEBUG BasicTypeRegistry:147 - Adding type registration character -> org.hibernate.type.CharacterType@87d53d8
17:20:28,491 DEBUG BasicTypeRegistry:147 - Adding type registration char -> org.hibernate.type.CharacterType@87d53d8
17:20:28,491 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@87d53d8
17:20:28,491 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@223e0d14
17:20:28,491 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@223e0d14
17:20:28,491 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223e0d14
17:20:28,491 DEBUG BasicTypeRegistry:147 - Adding type registration integer -> org.hibernate.type.IntegerType@5f790458
17:20:28,491 DEBUG BasicTypeRegistry:147 - Adding type registration int -> org.hibernate.type.IntegerType@5f790458
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f790458
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@77f9401
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@77f9401
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@77f9401
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@3068472e
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@3068472e
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3068472e
17:20:28,492 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@9e76345
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@9e76345
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9e76345
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e414142
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e414142
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@779b68bb
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@779b68bb
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration string -> org.hibernate.type.StringType@257218c4
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.String -> org.hibernate.type.StringType@257218c4
17:20:28,493 DEBUG BasicTypeRegistry:147 - Adding type registration url -> org.hibernate.type.UrlType@561734ad
17:20:28,494 DEBUG BasicTypeRegistry:147 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@561734ad
17:20:28,494 DEBUG BasicTypeRegistry:147 - Adding type registration date -> org.hibernate.type.DateType@4b9048da
17:20:28,494 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9048da
17:20:28,494 DEBUG BasicTypeRegistry:147 - Adding type registration time -> org.hibernate.type.TimeType@2e171570
17:20:28,494 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e171570
17:20:28,494 DEBUG BasicTypeRegistry:147 - Adding type registration timestamp -> org.hibernate.type.TimestampType@12e84396
17:20:28,494 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12e84396
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12e84396
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e69b84c
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c23e9b7
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c23e9b7
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c23e9b7
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@427e3f2
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration locale -> org.hibernate.type.LocaleType@4e1a6fb3
17:20:28,495 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e1a6fb3
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration currency -> org.hibernate.type.CurrencyType@13cad3a6
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13cad3a6
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@280cb229
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@280cb229
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration class -> org.hibernate.type.ClassType@50d81341
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50d81341
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:20:28,496 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:20:28,497 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a4640
17:20:28,497 DEBUG BasicTypeRegistry:147 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15720bea
17:20:28,497 DEBUG BasicTypeRegistry:147 - Adding type registration binary -> org.hibernate.type.BinaryType@e658001
17:20:28,497 DEBUG BasicTypeRegistry:147 - Adding type registration byte[] -> org.hibernate.type.BinaryType@e658001
17:20:28,497 DEBUG BasicTypeRegistry:147 - Adding type registration [B -> org.hibernate.type.BinaryType@e658001
17:20:28,497 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54b5c292
17:20:28,497 DEBUG BasicTypeRegistry:147 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54b5c292
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54b5c292
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration image -> org.hibernate.type.ImageType@27abf66
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration characters -> org.hibernate.type.CharArrayType@3431b5d7
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3431b5d7
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration [C -> org.hibernate.type.CharArrayType@3431b5d7
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@241dbc8b
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@241dbc8b
17:20:28,498 DEBUG BasicTypeRegistry:147 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@241dbc8b
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration text -> org.hibernate.type.TextType@76663cdf
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@3485923b
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3485923b
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1319e2db
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@354742ee
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@48a85972
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48a85972
17:20:28,499 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27ae011
17:20:28,500 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6eaee86f
17:20:28,500 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@782516dc
17:20:28,500 DEBUG BasicTypeRegistry:147 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ed9c28
17:20:28,500 DEBUG BasicTypeRegistry:147 - Adding type registration object -> org.hibernate.type.ObjectType@1d505b41
17:20:28,500 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d505b41
17:20:28,500 DEBUG BasicTypeRegistry:147 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bd32c54
17:20:28,500 DEBUG BasicTypeRegistry:147 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75037619
17:20:28,501 DEBUG BasicTypeRegistry:147 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@363e9f53
17:20:28,501 DEBUG BasicTypeRegistry:147 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@494e1df7
17:20:28,501 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@279168ba
17:20:28,501 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b729fa1
17:20:28,501 DEBUG BasicTypeRegistry:147 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@624e2184
17:20:28,501 DEBUG BasicTypeRegistry:147 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@777a9387
17:20:28,501 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@886b178
17:20:28,501  INFO BasicTypeRegistry:150 - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@782516dc
17:20:28,502 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@44e91a77
17:20:28,502  INFO BasicTypeRegistry:150 - Type registration [blob] overrides previous : org.hibernate.type.BlobType@3485923b
17:20:28,502 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44e91a77
17:20:28,502  INFO BasicTypeRegistry:150 - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@3485923b
17:20:28,502 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73a03b0
17:20:28,502  INFO BasicTypeRegistry:150 - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@27ae011
17:20:28,502 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@47fb58c9
17:20:28,503  INFO BasicTypeRegistry:150 - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@354742ee
17:20:28,503 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@71c81b84
17:20:28,503  INFO BasicTypeRegistry:150 - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@6eaee86f
17:20:28,503 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@4682190a
17:20:28,503  INFO BasicTypeRegistry:150 - Type registration [clob] overrides previous : org.hibernate.type.ClobType@48a85972
17:20:28,503 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4682190a
17:20:28,503  INFO BasicTypeRegistry:150 - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@48a85972
17:20:28,503 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@23c89df9
17:20:28,504  INFO BasicTypeRegistry:150 - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@1319e2db
17:20:28,597  INFO SessionFactoryObjectFactory:105 - Not binding factory to JNDI, no JNDI name configured
17:20:28,602  INFO SchemaUpdate:155 - Running hbm2ddl schema update
17:20:28,602  INFO SchemaUpdate:167 - fetching database metadata
17:20:30,605 ERROR SchemaUpdate:175 - could not get database metadata
org.h2.jdbc.JdbcSQLException: Database may be already in use: "Locked by another process". Possible solutions: close all other connection(s); use the server mode [90020-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.store.FileLock.getExceptionAlreadyInUse(FileLock.java:441)
	at org.h2.store.FileLock.lockFile(FileLock.java:337)
	at org.h2.store.FileLock.lock(FileLock.java:129)
	at org.h2.engine.Database.open(Database.java:557)
	at org.h2.engine.Database.openDatabase(Database.java:224)
	at org.h2.engine.Database.<init>(Database.java:219)
	at org.h2.engine.Engine.openSession(Engine.java:56)
	at org.h2.engine.Engine.openSession(Engine.java:160)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:139)
	at org.h2.engine.Engine.createSession(Engine.java:122)
	at org.h2.engine.Engine.createSession(Engine.java:28)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:313)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:105)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:90)
	at org.h2.Driver.connect(Driver.java:73)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:133)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:168)
	at org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:375)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1872)
	at com.motech.test.customEntity.CustomEntityCreator.getSessionFactory2(CustomEntityCreator.java:138)
	at com.motech.test.customEntity.TestCustomEntity.main(TestCustomEntity.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
17:20:30,606 ERROR SchemaUpdate:222 - could not complete schema update
org.h2.jdbc.JdbcSQLException: Database may be already in use: "Locked by another process". Possible solutions: close all other connection(s); use the server mode [90020-172]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.store.FileLock.getExceptionAlreadyInUse(FileLock.java:441)
	at org.h2.store.FileLock.lockFile(FileLock.java:337)
	at org.h2.store.FileLock.lock(FileLock.java:129)
	at org.h2.engine.Database.open(Database.java:557)
	at org.h2.engine.Database.openDatabase(Database.java:224)
	at org.h2.engine.Database.<init>(Database.java:219)
	at org.h2.engine.Engine.openSession(Engine.java:56)
	at org.h2.engine.Engine.openSession(Engine.java:160)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:139)
	at org.h2.engine.Engine.createSession(Engine.java:122)
	at org.h2.engine.Engine.createSession(Engine.java:28)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:313)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:105)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:90)
	at org.h2.Driver.connect(Driver.java:73)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:133)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:51)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:168)
	at org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:375)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1872)
	at com.motech.test.customEntity.CustomEntityCreator.getSessionFactory2(CustomEntityCreator.java:138)
	at com.motech.test.customEntity.TestCustomEntity.main(TestCustomEntity.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
17:20:32,657  WARN JDBCExceptionReporter:233 - SQL Error: 90020, SQLState: 90020
17:20:32,657 ERROR JDBCExceptionReporter:234 - Database may be already in use: "Locked by another process". Possible solutions: close all other connection(s); use the server mode [90020-172]
17:21:08,768 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:21:08,771 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:21:08,773 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:21:08,775 DEBUG BasicTypeRegistry:147 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7debbfde
17:21:08,777 DEBUG BasicTypeRegistry:147 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42e1b6ac
17:21:08,778 DEBUG BasicTypeRegistry:147 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3e470524
17:21:08,780 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@4cc3507d
17:21:08,781 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@4cc3507d
17:21:08,781 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4cc3507d
17:21:08,782 DEBUG BasicTypeRegistry:147 - Adding type registration character -> org.hibernate.type.CharacterType@87d53d8
17:21:08,783 DEBUG BasicTypeRegistry:147 - Adding type registration char -> org.hibernate.type.CharacterType@87d53d8
17:21:08,783 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@87d53d8
17:21:08,786 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@223e0d14
17:21:08,786 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@223e0d14
17:21:08,786 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223e0d14
17:21:08,788 DEBUG BasicTypeRegistry:147 - Adding type registration integer -> org.hibernate.type.IntegerType@5f790458
17:21:08,790 DEBUG BasicTypeRegistry:147 - Adding type registration int -> org.hibernate.type.IntegerType@5f790458
17:21:08,790 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f790458
17:21:08,793 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@77f9401
17:21:08,793 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@77f9401
17:21:08,793 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@77f9401
17:21:08,796 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@3068472e
17:21:08,796 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@3068472e
17:21:08,796 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3068472e
17:21:08,798 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@9e76345
17:21:08,798 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@9e76345
17:21:08,799 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9e76345
17:21:08,803 DEBUG BasicTypeRegistry:147 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e414142
17:21:08,804 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e414142
17:21:08,807 DEBUG BasicTypeRegistry:147 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@779b68bb
17:21:08,807 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@779b68bb
17:21:08,809 DEBUG BasicTypeRegistry:147 - Adding type registration string -> org.hibernate.type.StringType@257218c4
17:21:08,809 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.String -> org.hibernate.type.StringType@257218c4
17:21:08,811 DEBUG BasicTypeRegistry:147 - Adding type registration url -> org.hibernate.type.UrlType@561734ad
17:21:08,811 DEBUG BasicTypeRegistry:147 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@561734ad
17:21:08,814 DEBUG BasicTypeRegistry:147 - Adding type registration date -> org.hibernate.type.DateType@4b9048da
17:21:08,814 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9048da
17:21:08,816 DEBUG BasicTypeRegistry:147 - Adding type registration time -> org.hibernate.type.TimeType@2e171570
17:21:08,816 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e171570
17:21:08,818 DEBUG BasicTypeRegistry:147 - Adding type registration timestamp -> org.hibernate.type.TimestampType@12e84396
17:21:08,818 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12e84396
17:21:08,818 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12e84396
17:21:08,820 DEBUG BasicTypeRegistry:147 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e69b84c
17:21:08,821 DEBUG BasicTypeRegistry:147 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c23e9b7
17:21:08,821 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c23e9b7
17:21:08,821 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c23e9b7
17:21:08,822 DEBUG BasicTypeRegistry:147 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@427e3f2
17:21:08,824 DEBUG BasicTypeRegistry:147 - Adding type registration locale -> org.hibernate.type.LocaleType@4e1a6fb3
17:21:08,824 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e1a6fb3
17:21:08,825 DEBUG BasicTypeRegistry:147 - Adding type registration currency -> org.hibernate.type.CurrencyType@13cad3a6
17:21:08,826 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13cad3a6
17:21:08,827 DEBUG BasicTypeRegistry:147 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@280cb229
17:21:08,827 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@280cb229
17:21:08,828 DEBUG BasicTypeRegistry:147 - Adding type registration class -> org.hibernate.type.ClassType@50d81341
17:21:08,828 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50d81341
17:21:08,831 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:21:08,831 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:21:08,832 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a4640
17:21:08,833 DEBUG BasicTypeRegistry:147 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15720bea
17:21:08,834 DEBUG BasicTypeRegistry:147 - Adding type registration binary -> org.hibernate.type.BinaryType@e658001
17:21:08,835 DEBUG BasicTypeRegistry:147 - Adding type registration byte[] -> org.hibernate.type.BinaryType@e658001
17:21:08,835 DEBUG BasicTypeRegistry:147 - Adding type registration [B -> org.hibernate.type.BinaryType@e658001
17:21:08,836 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54b5c292
17:21:08,836 DEBUG BasicTypeRegistry:147 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54b5c292
17:21:08,836 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54b5c292
17:21:08,837 DEBUG BasicTypeRegistry:147 - Adding type registration image -> org.hibernate.type.ImageType@27abf66
17:21:08,839 DEBUG BasicTypeRegistry:147 - Adding type registration characters -> org.hibernate.type.CharArrayType@3431b5d7
17:21:08,839 DEBUG BasicTypeRegistry:147 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3431b5d7
17:21:08,839 DEBUG BasicTypeRegistry:147 - Adding type registration [C -> org.hibernate.type.CharArrayType@3431b5d7
17:21:08,840 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@241dbc8b
17:21:08,840 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@241dbc8b
17:21:08,840 DEBUG BasicTypeRegistry:147 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@241dbc8b
17:21:08,841 DEBUG BasicTypeRegistry:147 - Adding type registration text -> org.hibernate.type.TextType@76663cdf
17:21:08,848 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@3485923b
17:21:08,849 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3485923b
17:21:08,849 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1319e2db
17:21:08,850 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@354742ee
17:21:08,855 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@48a85972
17:21:08,855 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48a85972
17:21:08,856 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27ae011
17:21:08,857 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6eaee86f
17:21:08,857 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@782516dc
17:21:08,859 DEBUG BasicTypeRegistry:147 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ed9c28
17:21:08,862 DEBUG BasicTypeRegistry:147 - Adding type registration object -> org.hibernate.type.ObjectType@1d505b41
17:21:08,862 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d505b41
17:21:08,863 DEBUG BasicTypeRegistry:147 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75657fb2
17:21:08,863 DEBUG BasicTypeRegistry:147 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5aa2bb54
17:21:08,863 DEBUG BasicTypeRegistry:147 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@71b8b648
17:21:08,864 DEBUG BasicTypeRegistry:147 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15c76b4c
17:21:08,864 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@575555bf
17:21:08,864 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@23709b64
17:21:08,864 DEBUG BasicTypeRegistry:147 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@35e9d469
17:21:08,864 DEBUG BasicTypeRegistry:147 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a785526
17:21:08,884  INFO Version:37 - Hibernate Commons Annotations 3.2.0.Final
17:21:08,889  INFO Environment:603 - Hibernate 3.6.6.Final
17:21:08,891  INFO Environment:636 - hibernate.properties not found
17:21:08,894  INFO Environment:814 - Bytecode provider name : javassist
17:21:08,896  INFO Environment:695 - using JDK 1.4 java.sql.Timestamp handling
17:21:08,949  INFO Configuration:2156 - configuring from resource: /hibernate.cfg.xml
17:21:08,949  INFO Configuration:2175 - Configuration resource: /hibernate.cfg.xml
17:21:09,023  WARN Environment:592 - Property [hibernate.cglib.use_reflection_optimizer] has been renamed to [hibernate.bytecode.use_reflection_optimizer]; update your properties appropriately
17:21:09,024  INFO Configuration:2297 - Configured SessionFactory: null
17:21:09,042  INFO Dialect:135 - Using dialect: org.hibernate.dialect.H2Dialect
17:21:09,087  INFO Configuration:1676 - Hibernate Validator not found: ignoring
17:21:09,091  INFO HibernateSearchEventListenerRegister:75 - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
17:21:09,093  WARN Environment:592 - Property [hibernate.cglib.use_reflection_optimizer] has been renamed to [hibernate.bytecode.use_reflection_optimizer]; update your properties appropriately
17:21:09,096  WARN ConnectionProviderFactory:152 - c3p0 properties is specificed, but could not find org.hibernate.connection.C3P0ConnectionProvider from the classpath, these properties are going to be ignored.
17:21:09,097  INFO DriverManagerConnectionProvider:64 - Using Hibernate built-in connection pool (not for production use!)
17:21:09,097  INFO DriverManagerConnectionProvider:65 - Hibernate connection pool size: 20
17:21:09,098  INFO DriverManagerConnectionProvider:68 - autocommit mode: false
17:21:09,101  INFO DriverManagerConnectionProvider:103 - using driver: org.h2.Driver at URL: jdbc:h2:~/motechtest
17:21:09,101  INFO DriverManagerConnectionProvider:109 - connection properties: {user=sa, password=****}
17:21:11,408  INFO Dialect:135 - Using dialect: org.hibernate.dialect.H2Dialect
17:21:11,413  INFO SettingsFactory:126 - Database ->
       name : H2
    version : 1.3.172 (2013-05-25)
      major : 1
      minor : 3
17:21:11,413  INFO SettingsFactory:132 - Driver ->
       name : H2 JDBC Driver
    version : 1.3.172 (2013-05-25)
      major : 1
      minor : 3
17:21:11,414  INFO TransactionFactoryFactory:62 - Using default transaction strategy (direct JDBC transactions)
17:21:11,415  INFO TransactionManagerLookupFactory:83 - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
17:21:11,415  INFO SettingsFactory:179 - Automatic flush during beforeCompletion(): disabled
17:21:11,415  INFO SettingsFactory:183 - Automatic session close at end of transaction: disabled
17:21:11,416  INFO SettingsFactory:190 - JDBC batch size: 20
17:21:11,416  INFO SettingsFactory:193 - JDBC batch updates for versioned data: disabled
17:21:11,416  INFO SettingsFactory:198 - Scrollable result sets: enabled
17:21:11,416  INFO SettingsFactory:206 - JDBC3 getGeneratedKeys(): enabled
17:21:11,416  INFO SettingsFactory:214 - Connection release mode: auto
17:21:11,417  INFO SettingsFactory:241 - Default batch fetch size: 1
17:21:11,417  INFO SettingsFactory:245 - Generate SQL with comments: disabled
17:21:11,417  INFO SettingsFactory:249 - Order SQL updates by primary key: disabled
17:21:11,417  INFO SettingsFactory:253 - Order SQL inserts for batching: disabled
17:21:11,417  INFO SettingsFactory:431 - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
17:21:11,419  INFO ASTQueryTranslatorFactory:47 - Using ASTQueryTranslatorFactory
17:21:11,419  INFO SettingsFactory:261 - Query language substitutions: {}
17:21:11,419  INFO SettingsFactory:266 - JPA-QL strict compliance: disabled
17:21:11,420  INFO SettingsFactory:271 - Second-level cache: enabled
17:21:11,420  INFO SettingsFactory:275 - Query cache: disabled
17:21:11,420  INFO SettingsFactory:406 - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
17:21:11,421  INFO SettingsFactory:285 - Optimize cache for minimal puts: disabled
17:21:11,421  INFO SettingsFactory:294 - Structured second-level cache entries: disabled
17:21:11,424  INFO SettingsFactory:314 - Echoing all SQL to stdout
17:21:11,425  INFO SettingsFactory:323 - Statistics: disabled
17:21:11,425  INFO SettingsFactory:327 - Deleted entity synthetic identifier rollback: disabled
17:21:11,425  INFO SettingsFactory:343 - Default entity-mode: pojo
17:21:11,425  INFO SettingsFactory:347 - Named query checking : enabled
17:21:11,426  INFO SettingsFactory:351 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:21:11,443  INFO SessionFactoryImpl:202 - building session factory
17:21:11,449 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@40d8b2eb
17:21:11,449 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:21:11,450 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:21:11,450 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f2eb71e
17:21:11,450 DEBUG BasicTypeRegistry:147 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7debbfde
17:21:11,450 DEBUG BasicTypeRegistry:147 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42e1b6ac
17:21:11,450 DEBUG BasicTypeRegistry:147 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3e470524
17:21:11,450 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@4cc3507d
17:21:11,450 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@4cc3507d
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4cc3507d
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration character -> org.hibernate.type.CharacterType@87d53d8
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration char -> org.hibernate.type.CharacterType@87d53d8
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@87d53d8
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@223e0d14
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@223e0d14
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223e0d14
17:21:11,451 DEBUG BasicTypeRegistry:147 - Adding type registration integer -> org.hibernate.type.IntegerType@5f790458
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration int -> org.hibernate.type.IntegerType@5f790458
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f790458
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@77f9401
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@77f9401
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@77f9401
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@3068472e
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@3068472e
17:21:11,452 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3068472e
17:21:11,453 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@9e76345
17:21:11,453 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@9e76345
17:21:11,453 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9e76345
17:21:11,453 DEBUG BasicTypeRegistry:147 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e414142
17:21:11,453 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e414142
17:21:11,453 DEBUG BasicTypeRegistry:147 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@779b68bb
17:21:11,453 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@779b68bb
17:21:11,454 DEBUG BasicTypeRegistry:147 - Adding type registration string -> org.hibernate.type.StringType@257218c4
17:21:11,454 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.String -> org.hibernate.type.StringType@257218c4
17:21:11,454 DEBUG BasicTypeRegistry:147 - Adding type registration url -> org.hibernate.type.UrlType@561734ad
17:21:11,454 DEBUG BasicTypeRegistry:147 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@561734ad
17:21:11,454 DEBUG BasicTypeRegistry:147 - Adding type registration date -> org.hibernate.type.DateType@4b9048da
17:21:11,454 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9048da
17:21:11,454 DEBUG BasicTypeRegistry:147 - Adding type registration time -> org.hibernate.type.TimeType@2e171570
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e171570
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration timestamp -> org.hibernate.type.TimestampType@12e84396
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12e84396
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12e84396
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e69b84c
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c23e9b7
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c23e9b7
17:21:11,455 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c23e9b7
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@427e3f2
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration locale -> org.hibernate.type.LocaleType@4e1a6fb3
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e1a6fb3
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration currency -> org.hibernate.type.CurrencyType@13cad3a6
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13cad3a6
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@280cb229
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@280cb229
17:21:11,456 DEBUG BasicTypeRegistry:147 - Adding type registration class -> org.hibernate.type.ClassType@50d81341
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50d81341
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10b4adb7
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a4640
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15720bea
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration binary -> org.hibernate.type.BinaryType@e658001
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration byte[] -> org.hibernate.type.BinaryType@e658001
17:21:11,457 DEBUG BasicTypeRegistry:147 - Adding type registration [B -> org.hibernate.type.BinaryType@e658001
17:21:11,458 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54b5c292
17:21:11,458 DEBUG BasicTypeRegistry:147 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54b5c292
17:21:11,458 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54b5c292
17:21:11,458 DEBUG BasicTypeRegistry:147 - Adding type registration image -> org.hibernate.type.ImageType@27abf66
17:21:11,458 DEBUG BasicTypeRegistry:147 - Adding type registration characters -> org.hibernate.type.CharArrayType@3431b5d7
17:21:11,458 DEBUG BasicTypeRegistry:147 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3431b5d7
17:21:11,458 DEBUG BasicTypeRegistry:147 - Adding type registration [C -> org.hibernate.type.CharArrayType@3431b5d7
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@241dbc8b
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@241dbc8b
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@241dbc8b
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration text -> org.hibernate.type.TextType@76663cdf
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@3485923b
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3485923b
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1319e2db
17:21:11,459 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@354742ee
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@48a85972
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48a85972
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27ae011
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6eaee86f
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@782516dc
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ed9c28
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration object -> org.hibernate.type.ObjectType@1d505b41
17:21:11,460 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d505b41
17:21:11,461 DEBUG BasicTypeRegistry:147 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52ca838f
17:21:11,461 DEBUG BasicTypeRegistry:147 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d834bbf
17:21:11,461 DEBUG BasicTypeRegistry:147 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46e220c4
17:21:11,461 DEBUG BasicTypeRegistry:147 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27d54837
17:21:11,461 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2378274f
17:21:11,461 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@255cc5ba
17:21:11,461 DEBUG BasicTypeRegistry:147 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6db9497f
17:21:11,462 DEBUG BasicTypeRegistry:147 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f886920
17:21:11,462 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44e91a77
17:21:11,462  INFO BasicTypeRegistry:150 - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@1319e2db
17:21:11,462 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@73a03b0
17:21:11,462  INFO BasicTypeRegistry:150 - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@6eaee86f
17:21:11,462 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@47fb58c9
17:21:11,462  INFO BasicTypeRegistry:150 - Type registration [clob] overrides previous : org.hibernate.type.ClobType@48a85972
17:21:11,462 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47fb58c9
17:21:11,463  INFO BasicTypeRegistry:150 - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@48a85972
17:21:11,463 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@52e530d5
17:21:11,463  INFO BasicTypeRegistry:150 - Type registration [blob] overrides previous : org.hibernate.type.BlobType@3485923b
17:21:11,463 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@52e530d5
17:21:11,463  INFO BasicTypeRegistry:150 - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@3485923b
17:21:11,463 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@71c81b84
17:21:11,463  INFO BasicTypeRegistry:150 - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@782516dc
17:21:11,463 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4682190a
17:21:11,464  INFO BasicTypeRegistry:150 - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@27ae011
17:21:11,464 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@23c89df9
17:21:11,464  INFO BasicTypeRegistry:150 - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@354742ee
17:21:11,555  INFO SessionFactoryObjectFactory:105 - Not binding factory to JNDI, no JNDI name configured
17:21:11,559  INFO SchemaUpdate:155 - Running hbm2ddl schema update
17:21:11,559  INFO SchemaUpdate:167 - fetching database metadata
17:21:11,560  INFO SchemaUpdate:179 - updating schema
17:21:11,578  INFO TableMetadata:65 - table found: MOTECHTEST.PUBLIC.PERSON
17:21:11,578  INFO TableMetadata:66 - columns: [id]
17:21:11,579  INFO TableMetadata:68 - foreign keys: []
17:21:11,579  INFO TableMetadata:69 - indexes: []
17:21:11,579  INFO SchemaUpdate:217 - schema update complete
17:21:11,636 TRACE BasicBinder:82 - binding parameter [1] as [INTEGER] - 22
17:21:11,661 TRACE BasicExtractor:71 - found [22] as column [ID]
17:21:11,661 TRACE BasicExtractor:71 - found [22] as column [ID]
